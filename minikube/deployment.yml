apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatapp-ki-front
  namespace: chatapp-ki-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: chatapp
  template:
    metadata:
      labels:
        app: chatapp
    spec:
      containers:
        - name: chatapp-frontend
          image: rohitdarekar816/chatapp-frontend:latest
          ports:
            - containerPort: 80
          env:
            - name: BACKEND_URL
              value: "http://backend:5001"
            - name: NODE_ENV
              value: "production"
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 20
            periodSeconds: 15
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: chatapp-ki-deployment
data:
  nginx.conf: |
    server {
        listen 80;
        server_name localhost;
        
        root /usr/share/nginx/html;
        index index.html;
        
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        location /api/ {
            proxy_pass http://backend.chatapp-frontend-ki-service.cluster.local:5001/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
        
        location /socket.io/ {
            proxy_pass http://backend.chatapp-frontend-ki-service.svc.cluster.local:5001/socket.io/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    } 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatapp-ki-back
  namespace: chatapp-ki-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: rohitdarekar816/chatapp-backend:latest
          ports:
            - containerPort: 5001
          env:
            - name: MONGODB_URI
              value: "mongodb://root:admin@chatapp-mongo:27017/chatApp?authSource=admin&retryWrites=true&w=majority"
            - name: JWT_SECRET
              value: "au=.Z}G!Z0ur%heY?AC/=HqxQeA{SL{5"
            - name: PORT
              value: "5001"
            - name: NODE_ENV
              value: "production"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatapp-ki-mongo
  namespace: chatapp-ki-deployment
  labels:
    app: mongo
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: chatapp-mongo
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "root"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "admin"
---
apiVersion: v1
kind: Service
metadata:
  name: chatapp-frontend-ki-service
  namespace: chatapp-ki-deployment
spec:
  selector:
    app: chatapp
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30080
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: chatapp-backend-ki-service
  namespace: chatapp-ki-deployment
spec:
  selector:
    app: backend
  ports:
    - name: http
      protocol: TCP
      port: 5001
      targetPort: 5001
---
apiVersion: v1
kind: Service
metadata:
  name: chatapp-mongo
  namespace: chatapp-ki-deployment
spec:
  selector:
    app: mongo
  ports:
    - name: http
      protocol: TCP
      port: 27017
      targetPort: 27017